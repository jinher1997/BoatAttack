org, repo = ENV["GITHUB_REPOSITORY"].split("/")
match_org, match_repo = ENV["MATCH_REPOSITORY"].split("/")

path = "iOS/iOS/Unity-iPhone.xcodeproj"

default_platform(:ios)

platform :ios do
  desc "Set up codesigning"
  lane :sync_certificates do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    match(
      type: "appstore",
      storage_mode: "git",
      git_url: "git@github.com:#{match_org}/#{match_repo}.git",
      app_identifier: ENV["BUNDLE_ID"]
    )

    match(
      type: "development",
      storage_mode: "git",
      git_url: "git@github.com:#{match_org}/#{match_repo}.git",
      app_identifier: ENV["BUNDLE_ID"]
    )
  end

  desc "Generate a production IPA"
  lane :build do
    setup_ci
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV['APP_STORE_CONNECT_KEY']
    )

    sync_certificates

    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["sigh_#{ENV['BUNDLE_ID']}_appstore_team-id"],
      code_sign_identity: "iPhone Distribution",
      path: path,
      profile_name: ENV["sigh_#{ENV['BUNDLE_ID']}_appstore_profile-name"],
      profile_uuid: ENV["sigh_#{ENV['BUNDLE_ID']}_appstore"]
    )

    increment_build_number(
      build_number: ENV["BUILD_NUMBER"],
      xcodeproj: path,
    )

    increment_version_number( 
      version_number: ENV["VERSION"],
      xcodeproj: path,
    )

    build_app(
      project: path, 
      scheme: "App", 
      output_name: "#{ENV['DISPLAY_NAME']} - #{ENV['VERSION']} (#{ENV['BUILD_NUMBER']}).ipa",
      xcargs: "-allowProvisioningUpdates"
    )
  end

  desc "Push a new beta build to TestFlight"
  lane :testflight_beta do
    build
    upload_to_testflight
  end

  desc "Push a new build to the App Store"
  lane :app_store do
    build

    # TODO: Variable flow for either handling metadata/screenshots or not
    upload_to_app_store(
      force: true,
      skip_metadata: true,
      skip_screenshots: true,
      precheck_include_in_app_purchases: false # Doesn't work with App Store Connect API key
    )
  end

  lane :init_ci do
    github_action(
      api_token: ENV["GH_PAT"],
      org: org,
      repo: repo,
      match_org: match_org,
      match_repo: match_repo,
      writable_deploy_key: true
    )
  end
end