name: Unity Build

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}

jobs:
  unity:
    name: Build in Unity
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
          

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull

      # Build
      - name: Build project
        uses: webbertakken/unity-builder@v2
        with:
          targetPlatform: iOS 
          allowDirtyBuild: true
          # TODO: We need allowDirtyBuild because of our git-lfs asset hash. Maybe commit that?

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  apple:
    name: Build for Xcode and upload to Apple
    needs: unity
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Build

      - run: unzip build

      - run: ls

      - name: List files
        working-directory: iOS
        run: ls
      
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true 
      
      - name: Build iOS
        shell: bash
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          bundle exec fastlane build
          
        env:
          FASTLANE_USER: ${{ secrets.APPLE_ID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}

          BUNDLE_ID: ${{ env.BUNDLE_ID }}
          APP_NAME: ${{ env.APP_NAME }}
          BUILD_NUMBER: ${{ github.run_number }}
          VERSION: ${{ env.VERSION }}

          # Generate a new .p8 from https://appstoreconnect.apple.com/access/users, then "Keys"
          # I'm trying "App Manager" access
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }} # Raw .p8 value